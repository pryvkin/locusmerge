### INSTALLING DEPENDENCIES
## samtools
git clone https://github.com/samtools/samtools -b standalone
#cd samtools
#make
#cd ..
## R packages:
# run R then run:
install.packages(c("igraph", "fastcluster"))
# and choose a repository if prompted

### BUILDING

make


### USAGE

## input file; must be sorted by chromosome and position
inputbam=in.bam

## output prefix - all output filenames will begin with this
prefix=bamfile

## general options
ncpu=3

## annotation options
annot=hsa_ensembl.gtf
clsover=curated/hsa_ensembl_class_overlaps.txt

## locus calling options
loc_call_maxhits=5
loc_call_threshold=10
loc_call_minrun=14
loc_call_maxgap=44

## clustering options
# not yet impl:
#cluster_locus_min_count=20

##
# remove reads w/ > N mappings
echo "Removing reads with > ${loc_call_maxhits} hits..." >&2
./bam_filter_by_nh data/${inputbam} ${loc_call_maxhits} data/${prefix}.bam

# convert to bedgraph
echo "Converting BAM to bedGraph..." >&2
./bam_to_bedgraph.sh data/${prefix}.bam data/${prefix}

# segment into loci, producing a BED file
echo "Segmenting transcriptome into loci (+)..." >&2
./call_loci data/${prefix}.pos.bg \ 
  --threshold=${loc_call_threshold} --minrun=${loc_call_minrun} \
  --maxgap=${loc_call_maxgap} | \
  awk '{OFS="\t"; print $1,$2,$3,".",0,"+"}' > data/${prefix}.pos.bed
echo "Segmenting transcriptome into loci (-)..." >&2
./call_loci data/${prefix}.neg.bg | \
  --threshold=${loc_call_threshold} --minrun=${loc_call_minrun} \
  --maxgap=${loc_call_maxgap} | \
  awk '{OFS="\t"; print $1,$2,$3,".",0,"-"}' > data/${prefix}.neg.bed

# merge per-strand bed files and generate locus IDs
echo "Merging per-strand locus BEDs into final BED..." >&2
cat data/${prefix}.pos.bed data/${prefix}.neg.bed | \
  sort -k1,1 -k2n,2n | \
  awk '{OFS="\t"; $4 = sprintf("L%09d",NR); print }' > data/${prefix}.bed

# requires standalone devel version of samtools (0.1.19+)
echo "Sorting BAM by read name..." >&2
samtools sort -n -f -@ $ncpu data/${prefix}.bam data/${prefix}_byname.bam

# compute similarity scores between loci
echo "Computing similarity scores..." >&2
./locusmerge_compute_similarity data/${prefix}_byname.bam data/${prefix}.bed \
  ${loc_call_maxhits} > data/${prefix}.sim

# compute coverage of loci
echo "Computing coverage..." >&2
bedtools coverage -s -counts -split -abam data/${prefix}.bam -b data/${prefix}.bed > \
  data/${prefix}.cov

# compute uniq coverage of loci
echo "Computing unique coverage..." >&2
./bam_filter_by_nh data/${prefix}.bam 1 /dev/stdout | \
  bedtools coverage -s -counts -split -abam - -b data/${prefix}.bed > \
  data/${prefix}.uniqcov

# produce locus annotation
echo "Annotating loci using genome annotation..." >&2
./annotate_loci data/${prefix}.bed annot/${annot} data/${prefix}.cov \
  data/${prefix}.annot

# perform clustering
echo "Merging loci into clusters..." >&2
./locusmerge_cluster.R data/${prefix}.sim data/${prefix}.annot data/${prefix}.cov \
  data/${prefix}.uniqcov annot/curated/hsa_ensembl_class_overlaps.txt \
  data/${prefix}.clusters

# select loci and reads per cluster
echo "Selecting representative loci..." >&2
./select_loci data/${prefix}.bed data/${prefix}.clusters
echo "Selecting reads mapping to representative loci..." >&2
./select_reads data/${prefix}.bam data/${prefix}.bed.clustered


###### OUTPUT
# reads that map to clustered loci
${prefix}.bamfile.bam.clustered
# clustered loci and information about each cluster
${prefix}.bed.clustered
${prefix}.clusters


########### GENERATING GENOME ANNOTATIONS ##########
####### example for homo sapiens
mkdir -p annot
cd annot
wget ftp://ftp.ensembl.org/pub/release-74/gtf/homo_sapiens/Homo_sapiens.GRCh37.74.gtf.gz
gunzip Homo_sapiens.GRCh37.74.gtf.gz
# for some reason ensembl gtf is missing tRNAs; get it from UCSC
wget ftp://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/tRNAs.txt.gz
gunzip -c tRNAs.txt.gz > hsa_ucsc_trna.txt

# rename chromosomes to UCSC-style
awk 'BEGIN {FS="\t"; OFS="\t"}
     $1 ~ /^[0-9]+|^X|^Y/ { $1 = "chr"$1; print; next }
     $1 == "MT" { $1 = "chrM"; print; next }' Homo_sapiens.GRCh37.74.gtf > \
 hsa_ensembl.gtf
# convert ucsc trnas to GTF and append
awk 'BEGIN {OFS="\t"}
     { print $2,"tRNA","exon",1+$3,$4,".",$7,".",
             "gene_id \""$5"\"; transcript_id \""$5"\";" }' \
  hsa_ucsc_trna.txt >> hsa_ensembl.gtf

# then write annot/curated/hsa_ensembl_class_overlaps.txt by hand
# specifying which classes you'll allow to co-exist in locus clusters
# (i.e., which classes we'll allow lots of cross-mapping between)